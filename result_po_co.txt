def result(request):
    dec=request.POST.get('display')
    course_id = request.POST.get('courses')
    # Get the Course object based on the ID
    course = Course.objects.get(id=course_id)
    course_name = course.name
    # Retrieve the associated department for the course
    department = course.department
    programme=course.programme
    # Filter Programme_Specific_Outcome objects based on the related Department
    po = Programme_Outcome.objects.filter(programme=programme)

    # Retrieve Course_Outcome objects for the specific course
    co = course.course_outcome_set.all()

    # Fetch the PSO-CO connections for each CO
    po_co_connections = []

    for outcome in co:
        connected_po_ids = outcome.programme_specific_outcomes.values_list('id', flat=True)
        po_co_connections.append((outcome.id, connected_po_ids))

    context = {
        'program_specific_outcomes': po,
        'course_outcomes': co,
        'pso_co_connections': po_co_connections,
        'course_name': course_name,
        'course_id': course_id,
    }
    return render(request, 'result.html', context)